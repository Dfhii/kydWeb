<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dulk.baseMan.dao.RoleDao">
    <resultMap id="BaseResultMap" type="dulk.baseMan.pojo.Role">
        <constructor>
            <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="role" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="description" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="available" jdbcType="BIT" javaType="java.lang.Boolean"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        id, role, description, available
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from role
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="findAll" resultType="dulk.baseMan.pojo.Role">
        SELECT *
        FROM role
    </select>

    <select id="findByUserId" parameterType="long" resultType="dulk.baseMan.pojo.Role">
        SELECT *
        FROM role
        WHERE id IN
              (
                  SELECT DISTINCT role_id FROM user_x_role WHERE user_id = #{userId}
              )
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM role
        WHERE id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="dulk.baseMan.pojo.Role" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO role (id, role, description,
                          available)
        VALUES (#{id,jdbcType=BIGINT}, #{role,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
                #{available,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" parameterType="dulk.baseMan.pojo.Role">
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="role != null">
                role,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="available != null">
                available,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="role != null">
                #{role,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="available != null">
                #{available,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="dulk.baseMan.pojo.Role">
        update role
        <set>
            <if test="role != null">
                role = #{role,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="available != null">
                available = #{available,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="dulk.baseMan.pojo.Role">
        UPDATE role
        SET role        = #{role,jdbcType=VARCHAR},
            description = #{description,jdbcType=VARCHAR},
            available   = #{available,jdbcType=BIT}
        WHERE id = #{id,jdbcType=BIGINT}
    </update>
</mapper>